ext {
    jjwtVersion = '0.11.5'
    springVersion = '6.0.13'
}

dependencies {
    api 'org.springframework.boot:spring-boot-starter-data-jpa'
    implementation 'io.hypersistence:hypersistence-utils-hibernate-62:3.6.0'
    implementation 'com.fasterxml.jackson.module:jackson-module-jakarta-xmlbind-annotations'
    implementation 'com.h2database:h2'

    // WebSocket
    api 'org.springframework.boot:spring-boot-starter-websocket'

    // MongoDB
    implementation 'org.springframework.boot:spring-boot-starter-data-mongodb'
    // Redis
    implementation 'org.springframework.data:spring-data-redis'
    implementation 'io.lettuce:lettuce-core'

    //JWT
    runtimeOnly "io.jsonwebtoken:jjwt-jackson:${jjwtVersion}"
    runtimeOnly "io.jsonwebtoken:jjwt-impl:${jjwtVersion}"
    api "io.jsonwebtoken:jjwt-api:${jjwtVersion}"

    //AWS S3
    implementation 'com.amazonaws:aws-java-sdk-s3:1.12.575'

    // OPEN FEIGN
    implementation 'org.springframework.cloud:spring-cloud-starter-openfeign'

    // Messaging
    implementation "org.springframework:spring-messaging:${springVersion}"

    // Spring Caching
    implementation 'org.springframework.boot:spring-boot-starter-cache'
    implementation 'com.github.ben-manes.caffeine:caffeine'

    // query-dsl 추가 spring-boot 3.0, spring 6
    implementation 'com.querydsl:querydsl-jpa:5.0.0:jakarta'
    annotationProcessor "com.querydsl:querydsl-apt:5.0.0:jakarta"
    annotationProcessor "jakarta.annotation:jakarta.annotation-api"
    annotationProcessor "jakarta.persistence:jakarta.persistence-api"

    // Testcontainers
    testImplementation 'org.testcontainers:testcontainers:1.19.1'
    testImplementation 'org.testcontainers:junit-jupiter'
    testImplementation 'org.testcontainers:mongodb'

    api project(':onedayhero-common')
}

// === QueryDsl 빌드 옵션  ===
def querydslDir = "$buildDir/generated/querydsl"

sourceSets {
    main.java.srcDirs += querydslDir
}

tasks.withType(JavaCompile).configureEach {
    options.getGeneratedSourceOutputDirectory().set(file(querydslDir))
}

clean.doLast {
    file(querydslDir).deleteDir()
}

bootJar {
    enabled = false
}

jar {
    enabled = true
}

tasks.named('test') {
    useJUnitPlatform()
}
